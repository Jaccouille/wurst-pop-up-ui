package PopUp

import ClosureTimers
import HashMap
import LinkedList

let popUpPerPlayer = new HashMap<player, LinkedList<PopUpFrame>>

// Position of the initial pop up
@configurable let BOTTOM_RIGHT_OFFSET_X = 1.11
@configurable let BOTTOM_RIGHT_OFFSET_Y = 0.155

@configurable let TRANSITION_SPEED = 0.3
@configurable let POP_UP_ANIMATION_PERIOD = 0.03


class PopUpFrame
    private framehandle popUpFrame = null
    private var pos = vec2(0, 0)
    private player _p
    CallbackCounted movementLoop

    construct(player _p, string iconLeft, string iconMiddle, string iconRight, real lifetime)
        this._p = _p

        // Create frame with 0 as context so we can setup icon right away
        popUpFrame = createSimpleFrame("PopUpPanel", GAME_UI, 0)

        // Positions frame from the bottom right point
        popUpFrame.setAbsPoint(FRAMEPOINT_BOTTOMRIGHT, pos.x, pos.y)

        // Seems like those method get the frame at context 0 by default
        // since they always get the sub texture of the popUpFrame previously
        // created
        getFrame("IconLeft")
            ..setTexture(iconLeft, 0, true)
        getFrame("IconMiddle")
            ..setTexture(iconMiddle, 0, true)
        getFrame("IconRight")
            ..setTexture(iconRight, 0, true)

        // Find a way to have variable instead of global const
        // Adding parameters to the constructor might overload it?
        // Maybe a vec2(BOTTOM_RIGHT_OFFSET_X, BOTTOM_RIGHT_OFFSET_Y)?
        pos.x = BOTTOM_RIGHT_OFFSET_X - popUpFrame.getWidth()
        pos.y = BOTTOM_RIGHT_OFFSET_Y - popUpFrame.getHeight()

        // Destroy frame after lifetime seconds
        doAfter(lifetime) ->
            destroy this

    /**
        Moves the frame to the new coordinates  during specified duration
        Refresh the frame position every period
    **/
    function moveOverTime(real newX, real newY, real period, real duration)
        let stepY = (newY - pos.y) / (duration / period)
        let stepX = (newX - pos.x) / (duration / period)
        movementLoop = doPeriodicallyTimed(period, duration) cb ->
            if movementLoop != cb or this == null
                destroy cb
            pos += vec2(stepX, stepY)
            popUpFrame.setAbsPoint(FRAMEPOINT_BOTTOMRIGHT, pos.x, pos.y)

    function setScale(real scale)
        this.popUpFrame.setScale(scale)

    function getMainFrame() returns framehandle
        return this.popUpFrame

    function getPos() returns vec2
        return this.pos

    ondestroy
        popUpPerPlayer.get(_p).remove(this)
        popUpFrame.remove()

public function createPopUp(string iconLeft, string iconMiddle, string iconRight)
    // Display frame to every player
    // TODO: Think of a way to handle frame display to specific players like,
    // every player, Allies or Observer
    for i = 0 to bj_MAX_PLAYERS - 1
        if players[i].isIngame()
            let popUpList = popUpPerPlayer.get(players[i])

            // Create new pop up and register it in a list
            // New pop up will spawn behind the origin UI
            // It will gradually move up to become visible
            popUpList.addtoStart(
                new PopUpFrame(
                    players[i],
                    iconLeft,
                    iconMiddle,
                    iconRight,
                    10
                )
                ..setScale(0.5)
            )
            // Go over all the frames registered and move them up
            for popUp in popUpList
                let idx = popUpList.indexOf(popUp)
                let popUpHeight = popUp.getMainFrame().getHeight()
                let newY = BOTTOM_RIGHT_OFFSET_Y - popUpHeight + (idx + 1) * popUpHeight
                popUp.moveOverTime(
                    popUp.getPos().x,
                    newY,
                    POP_UP_ANIMATION_PERIOD,
                    TRANSITION_SPEED
                )


init
    if loadTOCFile("PopUp.toc") == false
        print("toc file loading failure")

    // Init PopUp tracker
    for i = 0 to bj_MAX_PLAYERS - 1
        if players[i].isIngame()
            popUpPerPlayer.put(players[i], new LinkedList<PopUpFrame>)
